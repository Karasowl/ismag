te voy a ar el componente padre de mi web de react: "import { useState, useEffect } from 'react';
import './App.css'
import Profile from './Profile.jsx'
import SpotifyPlayer from './SpotifyPlayer'
import ButtonsContainer from './ButtonsContainer'
import YoutubeLast from './YoutubeLast';
/* import Mailchimp from './Mailchimp'
import Popup from './Popup'
import TestApiMongo from './TestApiMongo'
import YoutubeVideo from './YoutubeVideo' */
import styled from 'styled-components';

const BackgroundVideo = styled.video position: fixed; width: 100%; height: 100%; object-fit: cover; z-index: -1; transform: scale(1.1);;

const Overlay = styled.div width: 100%; height: 100%; padding: 1% 0; background: linear-gradient(to bottom, rgba(255, 255, 255, 0.479) 0%, rgba(186, 90, 224, 0.5) 100%);;

const MainCard = styled.div display: flex; flex-direction: column; align-items: center; justify-content: center; background: linear-gradient(135deg, #dcd0fc8a 10%, #e4cefde0 100%); width: 90%; height: 90%; margin: 5%; border-radius: 10px; background-clip: padding-box; box-shadow: 0 0 20px rgba(255, 255, 255, 0.158); gap: 1vw;;

const H1 = styled.h1 font-size: 24px; font-weight: 200; line-height: 1.2; margin: 10px 0;;

const AppContainer = styled.main`
${BackgroundVideo} {
display: ${({ isVideoLoaded }) => (isVideoLoaded ? 'block' : 'none')};
}

${Overlay} {
position: relative;
}

${MainCard} {
display: flex;
flex-direction: column;
align-items: center;
justify-content: center;
background: linear-gradient(135deg, #cf87cb8a 10%, #e4cefd94 100%);
width: 90%;
height: 90%;
margin: 5%;

@media only screen and (max-width: 575px) {
/* Estilos para dispositivos móviles */
width: 100%;
height: 100%;
margin: 0;
border-radius: 0;
background: linear-gradient(135deg, #cf87cb8a 10%, #e4cefd94 100%);
}
}

@media only screen and (max-width: 575px) {
${Overlay} {
padding: 10% 0;
}

${BackgroundVideo} {
position: fixed;
width: 100%;
height: 100%;
object-fit: cover;
z-index: -1;
transform: scale(1.6);
}
}
`;

function App() {
const [isVideoLoaded, setIsVideoLoaded] = useState(false);

useEffect(() => {
window.onload = () => {
setIsVideoLoaded(true);
};
}, [setIsVideoLoaded]);

return (
<AppContainer isVideoLoaded={isVideoLoaded}>
<BackgroundVideo autoPlay muted loop id="bg-video">
<source src="/video amor princesa background web ismael guimarais music.mp4" type="video/mp4"/>
</BackgroundVideo>
<Overlay>
<MainCard>
<Profile />
<SpotifyPlayer/>
{/* <YoutubeLast/> */}
<ButtonsContainer/>
</MainCard>
</Overlay>
</AppContainer>
)
}

export default App;" ahora te voy a dar sus hijos: "import { useState, useEffect } from "react";
import profileImg1 from "./assets/channels4_profile.webp";
import profileImg2 from "./assets/profile.webp";
import profileImg3 from "./assets/27_n.webp";
import profileImg4 from "./assets/112_n.webp";
import profileImg5 from "./assets/295_n.webp";
import profileImg6 from "./assets/612_n.webp";
import "./Profile.css";

function Profile() {
const [profileImage, setProfileImage] = useState(profileImg1);
const [imageIndex, setImageIndex] = useState(0);

useEffect(() => {
const interval = setInterval(() => {
setImageIndex((prevIndex) => (prevIndex + 1) % 6);
}, 5000);

return () => clearInterval(interval);
}, []);

useEffect(() => {
const images = [
profileImg1,
profileImg2,
profileImg3,
profileImg4,
profileImg5,
profileImg6,
];
const nextImage = images[imageIndex];
const currentImage = document.getElementById("profile-image");

currentImage.classList.remove("fade-in");
currentImage.classList.add("fade-out");

setTimeout(() => {
setProfileImage(nextImage);
currentImage.classList.remove("fade-out");
currentImage.classList.add("fade-in");
}, 500);
}, [imageIndex]);

return (

<div className="profile"> <img id="profile-image" loading="lazy" src={profileImage} alt="Foto de perfil" className="fade-in" /> <h2>ISMAEL GUIMARAIS</h2> <p> || 🎤Cantautor || canto sobre: ❤️ El amor/ ✝️ La Adoración/ 🧠 La vida <br /> 🙃 ¿Me acompañas? </p> </div> ); }
export default Profile;
", ese fue uno y este es otro "import { useEffect, useState } from "react";
import "./SpotifyPlayer.css";

function SpotifyPlayer() {
const [iframeLoaded, setIframeLoaded] = useState(false);
const [isUserFromCuba, setIsUserFromCuba] = useState(false);
const api_Key = "9cc4ed0ac1e34a74a948bf5a0a7c2a0c"; // This is a free API key, it has a limit of 1000 requests per day. In the future I will use GeoJS probably.

useEffect(() => {
fetch(https://api.ipgeolocation.io/ipgeo?apiKey=${api_Key})
.then((response) => response.json())
.then((data) => {
if (data.country_name === "Cuba") {
setIsUserFromCuba(true);
} else {
setIsUserFromCuba(false);
}
}).catch(err => console.log(err))
}, []);

const handleIframeLoad = () => {
setIframeLoaded(true);
};

return (

<div> {!isUserFromCuba && !iframeLoaded && ( <div className="loading"> <p>Cargando...</p> <div className="dots"> <span className="dot"></span> <span className="dot"></span> <span className="dot"></span> </div> </div> ) } {!isUserFromCuba && ( <div className="spotify-player"> <h2 className="">Escucha mi más reciente canción en Spotify:</h2> <iframe src="https://open.spotify.com/embed/track/3cWkIYNstZUq6vmzZbnUXo?utm_source=generator" allowFullScreen="" allow="autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture" loading="lazy" onLoad={handleIframeLoad} sandbox="allow-forms allow-popups allow-same-origin allow-scripts allow-top-navigation" ></iframe> </div> )} </div> ); }
export default SpotifyPlayer;", acá ba otro más "import React, { useEffect } from "react";
import "./ButtonsContainer.css";
import ButtonLink from "./ButtonLink";

function ButtonsContainer() {
useEffect(() => {
const container = document.querySelector(".container");

function handleMouseMove(e) {
const xAxis = (window.innerWidth / 2 - e.pageX) / 95;
const yAxis = (window.innerHeight / 2 - e.pageY) / 95;
container.style.transform = rotateY(${xAxis}deg) rotateX(${yAxis}deg);
}

container.addEventListener("mousemove", handleMouseMove);
container.addEventListener("mouseleave", () => {
container.style.transform = "none";
});

}, []);

return (

<div className="container"> <ButtonLink link="https://www.youtube.com/channel/UCX-0vZliN8aUFGyr_WGxndA" fabicon="youtube" nameButton="YouTube" moreClasses="important-blue" /> <ButtonLink link="https://open.spotify.com/artist/6FBiAmYUgClucZddGctkwd" fabicon="spotify" nameButton="Spotify" moreClasses="important-blue" /> <ButtonLink link="https://music.apple.com/us/album/amor-princesa/1673165177?i=1673165178" fabicon="apple" nameButton="Apple Music" moreClasses="" /> <ButtonLink link="https://www.facebook.com/ismaguimarais" fabicon="facebook" nameButton="Facebook" moreClasses="" /> <ButtonLink link="https://www.instagram.com/ismaguimarais/" fabicon="instagram" nameButton="Instagram" moreClasses="" /> <ButtonLink link="https://www.twitter.com/ismaguimarais" fabicon="twitter" nameButton="Twitter" moreClasses="" /> <ButtonLink link="https://t.me/ismaguimarais" fabicon="telegram" nameButton="Telegram" moreClasses="" /> </div> ); }
export default ButtonsContainer;
" y dentro de ButtonsContainer está este otro: "import './ButtonLink.css';

function ButtonLink ({link, fabicon, nameButton, moreClasses}) {
const classes = btn-link ${moreClasses} ${fabicon};

return (
<a href={link} target="_blank">
<button
type="button"
className={classes}
id={${fabicon}_ButtonLink}
>
<i className={fab fa-${fabicon}}></i> {nameButton}
</button>
</a>
);
}

export default ButtonLink;" necesito que escribas en cada componente con la tecnología CSS IN JS estilos para cada uno de ellos para así comvertir mi web a estilos modernos y con un look de artista con las técnicas de diseño web más modernas y estética. Primero vamos a empezar por el componente App y luego te pediré el resto poco a poco. Sólo mandame al principio el del componente App